<instrumentationManifest xmlns="http://schemas.microsoft.com/win/2004/08/events">
  <instrumentation xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:win="http://manifests.microsoft.com/win/2004/08/windows/events">
    <events xmlns="http://schemas.microsoft.com/win/2004/08/events">
      <provider name="Microsoft-VisualStudio-Threading" guid="{589491ba-4f15-53fe-c376-db7f020f5204}" resourceFileName="Microsoft-VisualStudio-Threading" messageFileName="Microsoft-VisualStudio-Threading" symbol="MicrosoftVisualStudioThreading">
        <tasks>
          <task name="LockRequest" message="$(string.task_LockRequest)" value="1"/>
          <task name="LockRequestContention" message="$(string.task_LockRequestContention)" value="2"/>
          <task name="CircularJoinableTaskDependencyDetected" message="$(string.task_CircularJoinableTaskDependencyDetected)" value="65517"/>
          <task name="PostExecutionStop" message="$(string.task_PostExecutionStop)" value="65518"/>
          <task name="PostExecution" message="$(string.task_PostExecution)" value="65519"/>
          <task name="WaitSynchronously" message="$(string.task_WaitSynchronously)" value="65521"/>
          <task name="CompleteOnCurrentThreadStop" message="$(string.task_CompleteOnCurrentThreadStop)" value="65522"/>
          <task name="CompleteOnCurrentThread" message="$(string.task_CompleteOnCurrentThread)" value="65523"/>
          <task name="EventSourceMessage" message="$(string.task_EventSourceMessage)" value="65534"/>
        </tasks>
        <maps>
          <valueMap name="LockKind">
            <map value="0x0" message="$(string.map_LockKind.Read)"/>
            <map value="0x1" message="$(string.map_LockKind.UpgradeableRead)"/>
            <map value="0x2" message="$(string.map_LockKind.Write)"/>
          </valueMap>
        </maps>
        <opcodes>
          <opcode name="ReaderWriterLockWaiting" message="$(string.opcode_ReaderWriterLockWaiting)" value="100"/>
          <opcode name="ReaderWriterLockIssued" message="$(string.opcode_ReaderWriterLockIssued)" value="101"/>
          <opcode name="ReaderWriterLockIssuedAfterContention" message="$(string.opcode_ReaderWriterLockIssuedAfterContention)" value="102"/>
        </opcodes>
        <keywords>
          <keyword name="Session3" message="$(string.keyword_Session3)" mask="0x100000000000"/>
          <keyword name="Session2" message="$(string.keyword_Session2)" mask="0x200000000000"/>
          <keyword name="Session1" message="$(string.keyword_Session1)" mask="0x400000000000"/>
          <keyword name="Session0" message="$(string.keyword_Session0)" mask="0x800000000000"/>
        </keywords>
        <events>
          <event value="0" version="0" level="win:LogAlways" symbol="EventSourceMessage" task="EventSourceMessage" template="EventSourceMessageArgs"/>
          <event value="12" version="0" level="win:Informational" symbol="CompleteOnCurrentThreadStop" opcode="win:Stop" task="CompleteOnCurrentThreadStop" template="CompleteOnCurrentThreadStopArgs"/>
          <event value="13" version="0" level="win:Verbose" symbol="WaitSynchronouslyStart" opcode="win:Start" task="WaitSynchronously"/>
          <event value="14" version="0" level="win:Verbose" symbol="WaitSynchronouslyStop" opcode="win:Stop" task="WaitSynchronously"/>
          <event value="16" version="0" level="win:Verbose" symbol="PostExecutionStop" opcode="win:Stop" task="PostExecutionStop" template="PostExecutionStopArgs"/>
          <event value="17" version="0" level="win:Informational" symbol="CircularJoinableTaskDependencyDetected" task="CircularJoinableTaskDependencyDetected" template="CircularJoinableTaskDependencyDetectedArgs"/>
          <event value="1" version="0" level="win:Informational" symbol="ReaderWriterLockIssued" opcode="ReaderWriterLockIssued" task="LockRequest" template="ReaderWriterLockIssuedArgs"/>
          <event value="2" version="0" level="win:Informational" symbol="WaitReaderWriterLockStart" opcode="win:Start" task="LockRequestContention" template="WaitReaderWriterLockStartArgs"/>
          <event value="3" version="0" level="win:Informational" symbol="WaitReaderWriterLockStop" opcode="win:Stop" task="LockRequestContention" template="WaitReaderWriterLockStopArgs"/>
          <event value="11" version="0" level="win:Informational" symbol="CompleteOnCurrentThreadStart" opcode="win:Start" task="CompleteOnCurrentThread" template="CompleteOnCurrentThreadStartArgs"/>
          <event value="15" version="0" level="win:Verbose" symbol="PostExecutionStart" opcode="win:Start" task="PostExecution" template="PostExecutionStartArgs"/>
        </events>
        <templates>
          <template tid="EventSourceMessageArgs">
            <data name="message" inType="win:UnicodeString"/>
          </template>
          <template tid="CompleteOnCurrentThreadStopArgs">
            <data name="taskId" inType="win:Int32"/>
          </template>
          <template tid="PostExecutionStopArgs">
            <data name="requestId" inType="win:Int32"/>
          </template>
          <template tid="CircularJoinableTaskDependencyDetectedArgs">
            <data name="initUnreachableCount" inType="win:Int32"/>
            <data name="reachableCount" inType="win:Int32"/>
          </template>
          <template tid="ReaderWriterLockIssuedArgs">
            <data name="lockId" inType="win:Int32"/>
            <data name="kind" inType="win:UInt32" map="LockKind"/>
            <data name="issuedUpgradeableReadCount" inType="win:Int32"/>
            <data name="issuedReadCount" inType="win:Int32"/>
          </template>
          <template tid="WaitReaderWriterLockStartArgs">
            <data name="lockId" inType="win:Int32"/>
            <data name="kind" inType="win:UInt32" map="LockKind"/>
            <data name="issuedWriteCount" inType="win:Int32"/>
            <data name="issuedUpgradeableReadCount" inType="win:Int32"/>
            <data name="issuedReadCount" inType="win:Int32"/>
          </template>
          <template tid="WaitReaderWriterLockStopArgs">
            <data name="lockId" inType="win:Int32"/>
            <data name="kind" inType="win:UInt32" map="LockKind"/>
          </template>
          <template tid="CompleteOnCurrentThreadStartArgs">
            <data name="taskId" inType="win:Int32"/>
            <data name="isOnMainThread" inType="win:Boolean"/>
          </template>
          <template tid="PostExecutionStartArgs">
            <data name="requestId" inType="win:Int32"/>
            <data name="mainThreadAffinitized" inType="win:Boolean"/>
          </template>
        </templates>
      </provider>
    </events>
  </instrumentation>
  <localization>
    <resources culture="en-US">
      <stringTable>
        <string id="keyword_Session0" value="Session0"/>
        <string id="keyword_Session1" value="Session1"/>
        <string id="keyword_Session2" value="Session2"/>
        <string id="keyword_Session3" value="Session3"/>
        <string id="map_LockKind.Read" value="Read"/>
        <string id="map_LockKind.UpgradeableRead" value="UpgradeableRead"/>
        <string id="map_LockKind.Write" value="Write"/>
        <string id="opcode_ReaderWriterLockIssued" value="ReaderWriterLockIssued"/>
        <string id="opcode_ReaderWriterLockIssuedAfterContention" value="ReaderWriterLockIssuedAfterContention"/>
        <string id="opcode_ReaderWriterLockWaiting" value="ReaderWriterLockWaiting"/>
        <string id="task_CircularJoinableTaskDependencyDetected" value="CircularJoinableTaskDependencyDetected"/>
        <string id="task_CompleteOnCurrentThread" value="CompleteOnCurrentThread"/>
        <string id="task_CompleteOnCurrentThreadStop" value="CompleteOnCurrentThreadStop"/>
        <string id="task_EventSourceMessage" value="EventSourceMessage"/>
        <string id="task_LockRequest" value="LockRequest"/>
        <string id="task_LockRequestContention" value="LockRequestContention"/>
        <string id="task_PostExecution" value="PostExecution"/>
        <string id="task_PostExecutionStop" value="PostExecutionStop"/>
        <string id="task_WaitSynchronously" value="WaitSynchronously"/>
      </stringTable>
    </resources>
  </localization>
</instrumentationManifest>
